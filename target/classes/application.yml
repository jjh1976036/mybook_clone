# 공통 설정
server:
  port: 8080  # 기본값 (default profile)

spring:
  application:
    name: mybook

---

# 🟢 기본 (local) 개발 환경
spring:
  profiles: default

server:
  port: 8085  # default일 때는 8085

jpa:
  hibernate:
    ddl-auto: create
  properties:
    hibernate:
      show_sql: true
      format_sql: true
      implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

datasource:
  url: jdbc:h2:mem:testdb
  driver-class-name: org.h2.Driver
  username: sa
  password:

h2:
  console:
    enabled: true
    path: /h2-console

cloud:
  stream:
    kafka:
      binder:
        brokers: localhost:9092
      streams:
        binder:
          configuration:
            default:
              key:
                serde: org.apache.kafka.common.serialization.Serdes$StringSerde
              value:
                serde: org.apache.kafka.common.serialization.Serdes$StringSerde
    bindings:
      event-in:
        group: mybook
        destination: mp
        contentType: application/json
      event-out:
        destination: mp
        contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

---

# 🐳 Docker 환경용
spring:
  profiles: docker

jpa:
  hibernate:
    ddl-auto: create
  properties:
    hibernate:
      show_sql: true
      format_sql: true
      implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

datasource:
  url: jdbc:h2:mem:testdb
  driver-class-name: org.h2.Driver
  username: sa
  password:

h2:
  console:
    enabled: true
    path: /h2-console

cloud:
  stream:
    kafka:
      binder:
        brokers: my-kafka:9092
      streams:
        binder:
          configuration:
            default:
              key:
                serde: org.apache.kafka.common.serialization.Serdes$StringSerde
              value:
                serde: org.apache.kafka.common.serialization.Serdes$StringSerde
    bindings:
      event-in:
        group: mybook
        destination: mp
        contentType: application/json
      event-out:
        destination: mp
        contentType: application/json







